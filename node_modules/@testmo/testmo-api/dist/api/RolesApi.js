"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _ErrorCollection = _interopRequireDefault(require("../model/ErrorCollection"));
var _RolePage = _interopRequireDefault(require("../model/RolePage"));
var _RoleRow = _interopRequireDefault(require("../model/RoleRow"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Testmo REST API
                                                                                                                                                                                                                                                                                                                                                                                               * The Testmo REST API enables applications to interact with Testmo instances.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 2.0.0
                                                                                                                                                                                                                                                                                                                                                                                               * Contact: contact@testmo.com
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
* Roles service.
* @module api/RolesApi
* @version 2.0.0
*/
var RolesApi = /*#__PURE__*/function () {
  /**
  * Constructs a new RolesApi. 
  * @alias module:api/RolesApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function RolesApi(apiClient) {
    _classCallCheck(this, RolesApi);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }

  /**
   * Get a single role
   * Returns a single role.
   * @param {Number} roleId ID of the role to return.
   * @param {Object} opts Optional parameters
   * @param {String} opts.expands Comma-separated list of expands to return.
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RoleRow} and HTTP response
   */
  _createClass(RolesApi, [{
    key: "getRoleWithHttpInfo",
    value: function getRoleWithHttpInfo(roleId, opts) {
      opts = opts || {};
      var postBody = null;
      // verify the required parameter 'roleId' is set
      if (roleId === undefined || roleId === null) {
        throw new Error("Missing the required parameter 'roleId' when calling getRole");
      }
      var pathParams = {
        'role_id': roleId
      };
      var queryParams = {
        'expands': opts['expands']
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['bearerAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _RoleRow["default"];
      return this.apiClient.callApi('/api/v1/roles/{role_id}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Get a single role
     * Returns a single role.
     * @param {Number} roleId ID of the role to return.
     * @param {Object} opts Optional parameters
     * @param {String} opts.expands Comma-separated list of expands to return.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RoleRow}
     */
  }, {
    key: "getRole",
    value: function getRole(roleId, opts) {
      return this.getRoleWithHttpInfo(roleId, opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Get all roles
     * Returns a page of roles.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Number of page to return.
     * @param {module:model/Number} opts.perPage Maximum number of items to return per page.
     * @param {String} opts.expands Comma-separated list of expands to return.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RolePage} and HTTP response
     */
  }, {
    key: "getRolePageWithHttpInfo",
    value: function getRolePageWithHttpInfo(opts) {
      opts = opts || {};
      var postBody = null;
      var pathParams = {};
      var queryParams = {
        'page': opts['page'],
        'per_page': opts['perPage'],
        'expands': opts['expands']
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['bearerAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _RolePage["default"];
      return this.apiClient.callApi('/api/v1/roles', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Get all roles
     * Returns a page of roles.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Number of page to return.
     * @param {module:model/Number} opts.perPage Maximum number of items to return per page.
     * @param {String} opts.expands Comma-separated list of expands to return.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RolePage}
     */
  }, {
    key: "getRolePage",
    value: function getRolePage(opts) {
      return this.getRolePageWithHttpInfo(opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);
  return RolesApi;
}();
exports["default"] = RolesApi;