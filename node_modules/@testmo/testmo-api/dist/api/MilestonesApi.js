"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _ErrorCollection = _interopRequireDefault(require("../model/ErrorCollection"));
var _MilestonePage = _interopRequireDefault(require("../model/MilestonePage"));
var _MilestoneRow = _interopRequireDefault(require("../model/MilestoneRow"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Testmo REST API
                                                                                                                                                                                                                                                                                                                                                                                               * The Testmo REST API enables applications to interact with Testmo instances.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 2.0.0
                                                                                                                                                                                                                                                                                                                                                                                               * Contact: contact@testmo.com
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
* Milestones service.
* @module api/MilestonesApi
* @version 2.0.0
*/
var MilestonesApi = /*#__PURE__*/function () {
  /**
  * Constructs a new MilestonesApi. 
  * @alias module:api/MilestonesApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function MilestonesApi(apiClient) {
    _classCallCheck(this, MilestonesApi);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }

  /**
   * Get a single milestone
   * Returns a single milestone.
   * @param {Number} milestoneId ID of the milestone to return.
   * @param {Object} opts Optional parameters
   * @param {String} opts.expands Comma-separated list of expands to return.
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MilestoneRow} and HTTP response
   */
  _createClass(MilestonesApi, [{
    key: "getMilestoneWithHttpInfo",
    value: function getMilestoneWithHttpInfo(milestoneId, opts) {
      opts = opts || {};
      var postBody = null;
      // verify the required parameter 'milestoneId' is set
      if (milestoneId === undefined || milestoneId === null) {
        throw new Error("Missing the required parameter 'milestoneId' when calling getMilestone");
      }
      var pathParams = {
        'milestone_id': milestoneId
      };
      var queryParams = {
        'expands': opts['expands']
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['bearerAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _MilestoneRow["default"];
      return this.apiClient.callApi('/api/v1/milestones/{milestone_id}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Get a single milestone
     * Returns a single milestone.
     * @param {Number} milestoneId ID of the milestone to return.
     * @param {Object} opts Optional parameters
     * @param {String} opts.expands Comma-separated list of expands to return.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MilestoneRow}
     */
  }, {
    key: "getMilestone",
    value: function getMilestone(milestoneId, opts) {
      return this.getMilestoneWithHttpInfo(milestoneId, opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Get all milestones for a project
     * Returns a page of milestones for a project.
     * @param {Number} projectId ID of the project.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Number of page to return.
     * @param {module:model/Number} opts.perPage Maximum number of items to return per page.
     * @param {String} opts.expands Comma-separated list of expands to return.
     * @param {module:model/String} opts.sort Sort field for the list of milestones.
     * @param {module:model/String} opts.order Sort order (ascending or descending).
     * @param {String} opts.automationTags Comma-separated list of automation tags to filter by.
     * @param {Date} opts.completedAfter Limit result to milestones completed after (in ISO8601 format and UTC time zone).
     * @param {Date} opts.completedBefore Limit result to milestones completed before (in ISO8601 format and UTC time zone).
     * @param {Date} opts.createdAfter Limit result to milestones created after (in ISO8601 format and UTC time zone).
     * @param {Date} opts.createdBefore Limit result to milestones created before (in ISO8601 format and UTC time zone).
     * @param {String} opts.createdBy Comma-separated list of users to filter by.
     * @param {Boolean} opts.isCompleted Limit result to active or completed milestones only.
     * @param {String} opts.parentId Comma-separated list of parent milestones to filter by.
     * @param {String} opts.rootId Comma-separated list of root milestones to filter by.
     * @param {String} opts.typeId Comma-separated list of milestone types to filter by.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MilestonePage} and HTTP response
     */
  }, {
    key: "getMilestonePageWithHttpInfo",
    value: function getMilestonePageWithHttpInfo(projectId, opts) {
      opts = opts || {};
      var postBody = null;
      // verify the required parameter 'projectId' is set
      if (projectId === undefined || projectId === null) {
        throw new Error("Missing the required parameter 'projectId' when calling getMilestonePage");
      }
      var pathParams = {
        'project_id': projectId
      };
      var queryParams = {
        'page': opts['page'],
        'per_page': opts['perPage'],
        'expands': opts['expands'],
        'sort': opts['sort'],
        'order': opts['order'],
        'automation_tags': opts['automationTags'],
        'completed_after': opts['completedAfter'],
        'completed_before': opts['completedBefore'],
        'created_after': opts['createdAfter'],
        'created_before': opts['createdBefore'],
        'created_by': opts['createdBy'],
        'is_completed': opts['isCompleted'],
        'parent_id': opts['parentId'],
        'root_id': opts['rootId'],
        'type_id': opts['typeId']
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['bearerAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _MilestonePage["default"];
      return this.apiClient.callApi('/api/v1/projects/{project_id}/milestones', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Get all milestones for a project
     * Returns a page of milestones for a project.
     * @param {Number} projectId ID of the project.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Number of page to return.
     * @param {module:model/Number} opts.perPage Maximum number of items to return per page.
     * @param {String} opts.expands Comma-separated list of expands to return.
     * @param {module:model/String} opts.sort Sort field for the list of milestones.
     * @param {module:model/String} opts.order Sort order (ascending or descending).
     * @param {String} opts.automationTags Comma-separated list of automation tags to filter by.
     * @param {Date} opts.completedAfter Limit result to milestones completed after (in ISO8601 format and UTC time zone).
     * @param {Date} opts.completedBefore Limit result to milestones completed before (in ISO8601 format and UTC time zone).
     * @param {Date} opts.createdAfter Limit result to milestones created after (in ISO8601 format and UTC time zone).
     * @param {Date} opts.createdBefore Limit result to milestones created before (in ISO8601 format and UTC time zone).
     * @param {String} opts.createdBy Comma-separated list of users to filter by.
     * @param {Boolean} opts.isCompleted Limit result to active or completed milestones only.
     * @param {String} opts.parentId Comma-separated list of parent milestones to filter by.
     * @param {String} opts.rootId Comma-separated list of root milestones to filter by.
     * @param {String} opts.typeId Comma-separated list of milestone types to filter by.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MilestonePage}
     */
  }, {
    key: "getMilestonePage",
    value: function getMilestonePage(projectId, opts) {
      return this.getMilestonePageWithHttpInfo(projectId, opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);
  return MilestonesApi;
}();
exports["default"] = MilestonesApi;