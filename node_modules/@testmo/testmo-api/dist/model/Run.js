"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _RunLink = _interopRequireDefault(require("./RunLink"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Testmo REST API
                                                                                                                                                                                                                                                                                                                                                                                               * The Testmo REST API enables applications to interact with Testmo instances.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 2.0.0
                                                                                                                                                                                                                                                                                                                                                                                               * Contact: contact@testmo.com
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The Run model module.
 * @module model/Run
 * @version 2.0.0
 */
var Run = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Run</code>.
   * @alias module:model/Run
   */
  function Run() {
    _classCallCheck(this, Run);
    Run.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(Run, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>Run</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Run} obj Optional instance to populate.
     * @return {module:model/Run} The populated <code>Run</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Run();
        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
        }
        if (data.hasOwnProperty('project_id')) {
          obj['project_id'] = _ApiClient["default"].convertToType(data['project_id'], 'Number');
        }
        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }
        if (data.hasOwnProperty('config_id')) {
          obj['config_id'] = _ApiClient["default"].convertToType(data['config_id'], 'Number');
        }
        if (data.hasOwnProperty('milestone_id')) {
          obj['milestone_id'] = _ApiClient["default"].convertToType(data['milestone_id'], 'Number');
        }
        if (data.hasOwnProperty('state_id')) {
          obj['state_id'] = _ApiClient["default"].convertToType(data['state_id'], 'Number');
        }
        if (data.hasOwnProperty('forecast')) {
          obj['forecast'] = _ApiClient["default"].convertToType(data['forecast'], 'Number');
        }
        if (data.hasOwnProperty('forecast_completed')) {
          obj['forecast_completed'] = _ApiClient["default"].convertToType(data['forecast_completed'], 'Number');
        }
        if (data.hasOwnProperty('elapsed')) {
          obj['elapsed'] = _ApiClient["default"].convertToType(data['elapsed'], 'Number');
        }
        if (data.hasOwnProperty('is_started')) {
          obj['is_started'] = _ApiClient["default"].convertToType(data['is_started'], 'Boolean');
        }
        if (data.hasOwnProperty('is_closed')) {
          obj['is_closed'] = _ApiClient["default"].convertToType(data['is_closed'], 'Boolean');
        }
        if (data.hasOwnProperty('issues')) {
          obj['issues'] = _ApiClient["default"].convertToType(data['issues'], ['Number']);
        }
        if (data.hasOwnProperty('links')) {
          obj['links'] = _ApiClient["default"].convertToType(data['links'], [_RunLink["default"]]);
        }
        if (data.hasOwnProperty('tags')) {
          obj['tags'] = _ApiClient["default"].convertToType(data['tags'], ['String']);
        }
        if (data.hasOwnProperty('untested_count')) {
          obj['untested_count'] = _ApiClient["default"].convertToType(data['untested_count'], 'Number');
        }
        if (data.hasOwnProperty('status1_count')) {
          obj['status1_count'] = _ApiClient["default"].convertToType(data['status1_count'], 'Number');
        }
        if (data.hasOwnProperty('status2_count')) {
          obj['status2_count'] = _ApiClient["default"].convertToType(data['status2_count'], 'Number');
        }
        if (data.hasOwnProperty('status3_count')) {
          obj['status3_count'] = _ApiClient["default"].convertToType(data['status3_count'], 'Number');
        }
        if (data.hasOwnProperty('status4_count')) {
          obj['status4_count'] = _ApiClient["default"].convertToType(data['status4_count'], 'Number');
        }
        if (data.hasOwnProperty('status5_count')) {
          obj['status5_count'] = _ApiClient["default"].convertToType(data['status5_count'], 'Number');
        }
        if (data.hasOwnProperty('status6_count')) {
          obj['status6_count'] = _ApiClient["default"].convertToType(data['status6_count'], 'Number');
        }
        if (data.hasOwnProperty('status7_count')) {
          obj['status7_count'] = _ApiClient["default"].convertToType(data['status7_count'], 'Number');
        }
        if (data.hasOwnProperty('status8_count')) {
          obj['status8_count'] = _ApiClient["default"].convertToType(data['status8_count'], 'Number');
        }
        if (data.hasOwnProperty('status9_count')) {
          obj['status9_count'] = _ApiClient["default"].convertToType(data['status9_count'], 'Number');
        }
        if (data.hasOwnProperty('status10_count')) {
          obj['status10_count'] = _ApiClient["default"].convertToType(data['status10_count'], 'Number');
        }
        if (data.hasOwnProperty('status11_count')) {
          obj['status11_count'] = _ApiClient["default"].convertToType(data['status11_count'], 'Number');
        }
        if (data.hasOwnProperty('status12_count')) {
          obj['status12_count'] = _ApiClient["default"].convertToType(data['status12_count'], 'Number');
        }
        if (data.hasOwnProperty('status13_count')) {
          obj['status13_count'] = _ApiClient["default"].convertToType(data['status13_count'], 'Number');
        }
        if (data.hasOwnProperty('status14_count')) {
          obj['status14_count'] = _ApiClient["default"].convertToType(data['status14_count'], 'Number');
        }
        if (data.hasOwnProperty('status15_count')) {
          obj['status15_count'] = _ApiClient["default"].convertToType(data['status15_count'], 'Number');
        }
        if (data.hasOwnProperty('status16_count')) {
          obj['status16_count'] = _ApiClient["default"].convertToType(data['status16_count'], 'Number');
        }
        if (data.hasOwnProperty('status17_count')) {
          obj['status17_count'] = _ApiClient["default"].convertToType(data['status17_count'], 'Number');
        }
        if (data.hasOwnProperty('status18_count')) {
          obj['status18_count'] = _ApiClient["default"].convertToType(data['status18_count'], 'Number');
        }
        if (data.hasOwnProperty('status19_count')) {
          obj['status19_count'] = _ApiClient["default"].convertToType(data['status19_count'], 'Number');
        }
        if (data.hasOwnProperty('status20_count')) {
          obj['status20_count'] = _ApiClient["default"].convertToType(data['status20_count'], 'Number');
        }
        if (data.hasOwnProperty('status21_count')) {
          obj['status21_count'] = _ApiClient["default"].convertToType(data['status21_count'], 'Number');
        }
        if (data.hasOwnProperty('status22_count')) {
          obj['status22_count'] = _ApiClient["default"].convertToType(data['status22_count'], 'Number');
        }
        if (data.hasOwnProperty('status23_count')) {
          obj['status23_count'] = _ApiClient["default"].convertToType(data['status23_count'], 'Number');
        }
        if (data.hasOwnProperty('status24_count')) {
          obj['status24_count'] = _ApiClient["default"].convertToType(data['status24_count'], 'Number');
        }
        if (data.hasOwnProperty('success_count')) {
          obj['success_count'] = _ApiClient["default"].convertToType(data['success_count'], 'Number');
        }
        if (data.hasOwnProperty('failure_count')) {
          obj['failure_count'] = _ApiClient["default"].convertToType(data['failure_count'], 'Number');
        }
        if (data.hasOwnProperty('completed_count')) {
          obj['completed_count'] = _ApiClient["default"].convertToType(data['completed_count'], 'Number');
        }
        if (data.hasOwnProperty('total_count')) {
          obj['total_count'] = _ApiClient["default"].convertToType(data['total_count'], 'Number');
        }
        if (data.hasOwnProperty('started_at')) {
          obj['started_at'] = _ApiClient["default"].convertToType(data['started_at'], 'Date');
        }
        if (data.hasOwnProperty('created_at')) {
          obj['created_at'] = _ApiClient["default"].convertToType(data['created_at'], 'Date');
        }
        if (data.hasOwnProperty('created_by')) {
          obj['created_by'] = _ApiClient["default"].convertToType(data['created_by'], 'Number');
        }
        if (data.hasOwnProperty('updated_at')) {
          obj['updated_at'] = _ApiClient["default"].convertToType(data['updated_at'], 'Date');
        }
        if (data.hasOwnProperty('updated_by')) {
          obj['updated_by'] = _ApiClient["default"].convertToType(data['updated_by'], 'Number');
        }
        if (data.hasOwnProperty('closed_at')) {
          obj['closed_at'] = _ApiClient["default"].convertToType(data['closed_at'], 'Date');
        }
        if (data.hasOwnProperty('closed_by')) {
          obj['closed_by'] = _ApiClient["default"].convertToType(data['closed_by'], 'Number');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Run</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Run</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      }
      // ensure the json data is an array
      if (!Array.isArray(data['issues'])) {
        throw new Error("Expected the field `issues` to be an array in the JSON data but got " + data['issues']);
      }
      if (data['links']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['links'])) {
          throw new Error("Expected the field `links` to be an array in the JSON data but got " + data['links']);
        }
        // validate the optional field `links` (array)
        var _iterator = _createForOfIteratorHelper(data['links']),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;
            _RunLink["default"].validateJsonObject(item);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        ;
      }
      // ensure the json data is an array
      if (!Array.isArray(data['tags'])) {
        throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
      }
      return true;
    }
  }]);
  return Run;
}();
/**
 * @member {Number} id
 */
Run.prototype['id'] = undefined;

/**
 * @member {Number} project_id
 */
Run.prototype['project_id'] = undefined;

/**
 * @member {String} name
 */
Run.prototype['name'] = undefined;

/**
 * @member {Number} config_id
 */
Run.prototype['config_id'] = undefined;

/**
 * @member {Number} milestone_id
 */
Run.prototype['milestone_id'] = undefined;

/**
 * @member {Number} state_id
 */
Run.prototype['state_id'] = undefined;

/**
 * @member {Number} forecast
 */
Run.prototype['forecast'] = undefined;

/**
 * @member {Number} forecast_completed
 */
Run.prototype['forecast_completed'] = undefined;

/**
 * @member {Number} elapsed
 */
Run.prototype['elapsed'] = undefined;

/**
 * @member {Boolean} is_started
 */
Run.prototype['is_started'] = undefined;

/**
 * @member {Boolean} is_closed
 */
Run.prototype['is_closed'] = undefined;

/**
 * @member {Array.<Number>} issues
 */
Run.prototype['issues'] = undefined;

/**
 * @member {Array.<module:model/RunLink>} links
 */
Run.prototype['links'] = undefined;

/**
 * @member {Array.<String>} tags
 */
Run.prototype['tags'] = undefined;

/**
 * @member {Number} untested_count
 */
Run.prototype['untested_count'] = undefined;

/**
 * @member {Number} status1_count
 */
Run.prototype['status1_count'] = undefined;

/**
 * @member {Number} status2_count
 */
Run.prototype['status2_count'] = undefined;

/**
 * @member {Number} status3_count
 */
Run.prototype['status3_count'] = undefined;

/**
 * @member {Number} status4_count
 */
Run.prototype['status4_count'] = undefined;

/**
 * @member {Number} status5_count
 */
Run.prototype['status5_count'] = undefined;

/**
 * @member {Number} status6_count
 */
Run.prototype['status6_count'] = undefined;

/**
 * @member {Number} status7_count
 */
Run.prototype['status7_count'] = undefined;

/**
 * @member {Number} status8_count
 */
Run.prototype['status8_count'] = undefined;

/**
 * @member {Number} status9_count
 */
Run.prototype['status9_count'] = undefined;

/**
 * @member {Number} status10_count
 */
Run.prototype['status10_count'] = undefined;

/**
 * @member {Number} status11_count
 */
Run.prototype['status11_count'] = undefined;

/**
 * @member {Number} status12_count
 */
Run.prototype['status12_count'] = undefined;

/**
 * @member {Number} status13_count
 */
Run.prototype['status13_count'] = undefined;

/**
 * @member {Number} status14_count
 */
Run.prototype['status14_count'] = undefined;

/**
 * @member {Number} status15_count
 */
Run.prototype['status15_count'] = undefined;

/**
 * @member {Number} status16_count
 */
Run.prototype['status16_count'] = undefined;

/**
 * @member {Number} status17_count
 */
Run.prototype['status17_count'] = undefined;

/**
 * @member {Number} status18_count
 */
Run.prototype['status18_count'] = undefined;

/**
 * @member {Number} status19_count
 */
Run.prototype['status19_count'] = undefined;

/**
 * @member {Number} status20_count
 */
Run.prototype['status20_count'] = undefined;

/**
 * @member {Number} status21_count
 */
Run.prototype['status21_count'] = undefined;

/**
 * @member {Number} status22_count
 */
Run.prototype['status22_count'] = undefined;

/**
 * @member {Number} status23_count
 */
Run.prototype['status23_count'] = undefined;

/**
 * @member {Number} status24_count
 */
Run.prototype['status24_count'] = undefined;

/**
 * @member {Number} success_count
 */
Run.prototype['success_count'] = undefined;

/**
 * @member {Number} failure_count
 */
Run.prototype['failure_count'] = undefined;

/**
 * @member {Number} completed_count
 */
Run.prototype['completed_count'] = undefined;

/**
 * @member {Number} total_count
 */
Run.prototype['total_count'] = undefined;

/**
 * @member {Date} started_at
 */
Run.prototype['started_at'] = undefined;

/**
 * @member {Date} created_at
 */
Run.prototype['created_at'] = undefined;

/**
 * @member {Number} created_by
 */
Run.prototype['created_by'] = undefined;

/**
 * @member {Date} updated_at
 */
Run.prototype['updated_at'] = undefined;

/**
 * @member {Number} updated_by
 */
Run.prototype['updated_by'] = undefined;

/**
 * @member {Date} closed_at
 */
Run.prototype['closed_at'] = undefined;

/**
 * @member {Number} closed_by
 */
Run.prototype['closed_by'] = undefined;
var _default = Run;
exports["default"] = _default;